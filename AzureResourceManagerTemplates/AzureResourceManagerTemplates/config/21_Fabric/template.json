{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "defaultValue": "Cluster",
      "metadata": {
        "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds"
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "testadm",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "primaryCertificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "secondaryCertificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Certificate Thumbprint"
      }
    },
    "clientCertificateThumbprints": {
      "type": "array",
      "metadata": {
        "description": "Certificate Thumbprints"
      }
    },
    "vaultCertificates": {
      "type": "array",
      "metadata": {
        "description": "Certificates to install on vm"
      }
    },
    "sourceVaultValue": {
      "type": "string",
      "metadata": {
        "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
      }
    },
    "nt0fabricTcpGatewayPort": {
      "type": "int",
      "defaultValue": 19000
    },
    "nt0fabricHttpGatewayPort": {
      "type": "int",
      "defaultValue": 19080
    },
    "nt0InstanceCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Instance count for node type"
      }
    },
    "nt0vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2"
    },
    //"SFReverseProxyPort": {
    //  "type": "int",
    //  "defaultValue": 19008,
    //  "metadata": {
    //    "description": "Endpoint for Service Fabric Reverse proxy"
    //  }
    //},
    "loadBalancerIP": {
      "type": "string"
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "resourceGroupLocation": "[resourceGroup().location]",
    "vmssApiVersion": "2016-03-30",
    "lbApiVersion": "2015-06-15",
    "vNetApiVersion": "2015-06-15",
    "storageApiVersion": "2016-01-01",
    "publicIPApiVersion": "2015-06-15",
    "insightsApiVersion": "2015-04-01",
    "vnetName": "[concat(variables('resourceGroupName'), '-vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    //"nt0subnetID": "[concat(variables('vnetID'),'/subnets/Fabric')]",
    "nt0subnetID": "/subscriptions/bfb0ba87-c499-4f2a-9224-4456c845d0a6/resourceGroups/dellit-respTrans-rg1/providers/Microsoft.Network/virtualNetworks/dellit-respTrans-vNet/subnets/respTransNet02",
    "nt0subnetAddressPrefix": "10.164.116.64/27",
    "nt0name": "[concat(parameters('clusterName'),'-nt0')]",
    "nt0vmNamePrefix": "nt0",
    "nt0lbIPName": "[concat(variables('nt0name'),'-LBIP')]",
    "nt0lbID": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('nt0name'),'-LB'))]",
    "nt0lbIPConfig": "[concat(variables('nt0lbID'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "nt0lbPoolID": "[concat(variables('nt0lbID'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "nt0lbProbeID": "[concat(variables('nt0lbID'),'/probes/FabricGatewayProbe')]",
    "nt0lbHttpProbeID": "[concat(variables('nt0lbID'),'/probes/FabricHttpGatewayProbe')]",
    //"nt0lbReverseProxyProbeID": "[concat(variables('nt0lbID'),'/probes/SFReverseProxyProbe')]",
    "nt0lbNatPoolID": "[concat(variables('nt0lbID'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "nt0nicName": "[concat(variables('nt0name'),'-NIC')]",
    "supportLogStorageAccountName": "[replace(concat(variables('resourceGroupName'),'platformlogs'),'-','')]",
    "applicationDiagnosticsStorageAccountName": "[replace(concat(variables('resourceGroupName'),'applicationlogs'),'-','')]",
    "vmStorageAccountName0": "[replace(concat(parameters('clusterName'),'disk'),'-','')]",
    "uniqueStringArray0": [
      "[concat(variables('vmStorageAccountName0'), '0')]",
      "[concat(variables('vmStorageAccountName0'), '1')]",
      "[concat(variables('vmStorageAccountName0'), '2')]",
      "[concat(variables('vmStorageAccountName0'), '3')]",
      "[concat(variables('vmStorageAccountName0'), '4')]"
    ]
  },
  "resources": [
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('supportLogStorageAccountName')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [],
      "properties": {},
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [],
      "properties": {},
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    //{
    //  "apiVersion": "[variables('publicIPApiVersion')]",
    //  "type": "Microsoft.Network/publicIPAddresses",
    //  "name": "[variables('nt0lbIPName')]",
    //  "location": "[variables('resourceGroupLocation')]",
    //  "properties": {
    //    "dnsSettings": {
    //      "domainNameLabel": "[parameters('clusterName')]"
    //    },
    //    "publicIPAllocationMethod": "Dynamic"
    //  },
    //  "tags": {
    //    "resourceType": "Service Fabric",
    //    "clusterName": "[parameters('clusterName')]"
    //  }
    //},
    {
      "apiVersion": "[variables('lbApiVersion')]",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[concat(variables('nt0name'),'-LB')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        //"[concat('Microsoft.Network/publicIPAddresses/',variables('nt0lbIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerIPConfig",
            "properties": {
              //"publicIPAddress": {
              //  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('nt0lbIPName'))]"
              //}
              "subnet": {
                "id": "[variables('nt0subnetID')]"
              },
              "privateIPAddress": "[parameters('loadBalancerIP')]",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LoadBalancerBEAddressPool",
            "properties": {}
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('nt0lbPoolID')]"
              },
              "backendPort": "[parameters('nt0fabricTcpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('nt0lbIPConfig')]"
              },
              "frontendPort": "[parameters('nt0fabricTcpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('nt0lbProbeID')]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "LBHttpRule",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('nt0lbPoolID')]"
              },
              "backendPort": "[parameters('nt0fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('nt0lbIPConfig')]"
              },
              "frontendPort": "[parameters('nt0fabricHttpGatewayPort')]",
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('nt0lbHttpProbeID')]"
              },
              "protocol": "Tcp"
            }
          },
          //{
          //  "name": "LBSFReverseProxyRule",
          //  "properties": {
          //    "backendAddressPool": {
          //      "id": "[variables('nt0lbPoolID')]"
          //    },
          //    "backendPort": "[parameters('SFReverseProxyPort')]",
          //    "enableFloatingIP": false,
          //    "frontendIPConfiguration": {
          //      "id": "[variables('nt0lbIPConfig')]"
          //    },
          //    "frontendPort": "[parameters('SFReverseProxyPort')]",
          //    "idleTimeoutInMinutes": 5,
          //    "probe": {
          //      "id": "[variables('nt0lbReverseProxyProbeID')]"
          //    },
          //    "protocol": "Tcp"
          //  }
          //},
          //{
          //  "name": "TCP80",
          //  "properties": {
          //    "backendAddressPool": {
          //      "id": "[variables('nt0lbPoolID')]"
          //    },
          //    "backendPort": 80,
          //    "enableFloatingIP": false,
          //    "frontendIPConfiguration": {
          //      "id": "[variables('nt0lbIPConfig')]"
          //    },
          //    "frontendPort": 80,
          //    "idleTimeoutInMinutes": 5,
          //    "protocol": "Tcp"
          //  }
          //},
          {
            "name": "TCP443",
            "properties": {
              "backendAddressPool": {
                "id": "[variables('nt0lbPoolID')]"
              },
              "backendPort": 443,
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[variables('nt0lbIPConfig')]"
              },
              "frontendPort": 443,
              "idleTimeoutInMinutes": 5,
              "protocol": "Tcp"
            }
          }
          //{
          //  "name": "TCP20000",
          //  "properties": {
          //    "backendAddressPool": {
          //      "id": "[variables('nt0lbPoolID')]"
          //    },
          //    "backendPort": 20000,
          //    "enableFloatingIP": false,
          //    "frontendIPConfiguration": {
          //      "id": "[variables('nt0lbIPConfig')]"
          //    },
          //    "frontendPort": 20000,
          //    "idleTimeoutInMinutes": 5,
          //    "protocol": "Tcp"
          //  }
          //}
        ],
        "probes": [
          {
            "name": "FabricGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('nt0fabricTcpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "FabricHttpGatewayProbe",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[parameters('nt0fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          //{
          //  "name": "SFReverseProxyProbe",
          //  "properties": {
          //    "intervalInSeconds": 5,
          //    "numberOfProbes": 2,
          //    "port": "[parameters('SFReverseProxyPort')]",
          //    "protocol": "Tcp"
          //  }
          //}
        ],
        "inboundNatPools": [
          {
            "name": "LoadBalancerBEAddressNatPool",
            "properties": {
              "backendPort": 3389,
              "frontendIPConfiguration": {
                "id": "[variables('nt0lbIPConfig')]"
              },
              "frontendPortRangeStart": 3389,
              "frontendPortRangeEnd": 4500,
              "protocol": "tcp"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('storageApiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('uniqueStringArray0')[copyIndex()]]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [],
      "properties": {},
      "copy": {
        "name": "storageLoop",
        "count": 5
      },
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "[variables('vmssApiVersion')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[variables('nt0name')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        //"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0])]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1])]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2])]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3])]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4])]",
        "[concat('Microsoft.Network/loadBalancers/', concat(variables('nt0name'),'-LB'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat(variables('nt0vmNamePrefix'),'_ServiceFabricNode')]",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": false,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key1]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2015-06-15').key2]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "[variables('nt0name')]",
                    "dataPath": "D:\\\\SvcFab",
                    "durabilityLevel": "Bronze",
                    "nicPrefixOverride": "[variables('nt0subnetAddressPrefix')]",
                    "certificate": {
                      "thumbprint": "[parameters('primaryCertificateThumbprint')]",
                      "x509StoreName": "My"
                    },
                    "certificateSecondary": {
                      "thumbprint": "[parameters('secondaryCertificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat(variables('nt0vmNamePrefix'),'_IaaSDiagnostics')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2015-06-15').key1]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        },
                        "PerformanceCounters": {
                          "scheduledTransferPeriod": "PT1M",
                          "PerformanceCounterConfiguration": [
                            {
                              "counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Processor Information(_Total)\\% User Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\System\\Processes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Process(_Total)\\Thread Count",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Process(_Total)\\Handle Count",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\System\\System Up Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\System\\Context Switches/sec",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\System\\Processor Queue Length",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Available Bytes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Committed Bytes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Cache Bytes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Pool Paged Bytes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Pages/sec",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Memory\\Page Faults/sec",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Process(_Total)\\Working Set",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\Process(_Total)\\Working Set - Private",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
                              "sampleRate": "PT1M"
                            },
                            {
                              "counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
                              "sampleRate": "PT1M"
                            }
                          ]
                        },
                        "Metrics": {
                          "resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
                          "MetricAggregation": [
                            {
                              "scheduledTransferPeriod": "PT1H"
                            },
                            {
                              "scheduledTransferPeriod": "PT1M"
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nt0nicName')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[variables('nt0nicName')]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('nt0lbPoolID')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('nt0lbNatPoolID')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('nt0subnetID')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPassword')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computernamePrefix": "[variables('nt0vmNamePrefix')]",
            "secrets": [
              {
                "sourceVault": {
                  "id": "[parameters('sourceVaultValue')]"
                },
                "vaultCertificates": "[parameters('vaultCertificates')]"
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              //"sku": "2012-R2-Datacenter",
              "sku": "2016-Datacenter-with-Containers",
              "version": "latest"
            },
            "osDisk": {
              "vhdContainers": [
                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[0]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[1]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[2]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[3]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]",
                "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStringArray0')[4]), variables('storageApiVersion')).primaryEndpoints.blob, parameters('vmStorageAccountContainerName'))]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          }
        }
      },
      "sku": {
        "name": "[parameters('nt0vmSize')]",
        "capacity": "[parameters('nt0InstanceCount')]",
        "tier": "Standard"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "type": "Microsoft.Insights/autoscaleSettings",
      "apiVersion": "[variables('insightsApiVersion')]",
      "name": "cpuautoscale",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]"
      ],
      "properties": {
        "name": "cpuautoscale",
        "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
        "enabled": true,
        "profiles": [
          {
            "name": "Regular",
            "capacity": {
              "minimum": 5,
              "maximum": 10,
              "default": 5
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "\\Processor Information(_Total)\\% Processor Time",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 65
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT30M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "\\Processor Information(_Total)\\% Processor Time",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT30M"
                }
              }
            ]
          },
          {
            "name": "Black Friday",
            "fixedDate": {
              "start": "2017-11-01T00:00:00Z",
              "end": "2017-11-10T00:00:00Z",
              "timeZone": "UTC"
            },
            "capacity": {
              "minimum": 5,
              "maximum": 10,
              "default": 5
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "\\Processor Information(_Total)\\% Processor Time",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 65
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT30M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "\\Processor Information(_Total)\\% Processor Time",
                  "metricNamespace": "",
                  "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('nt0name'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": 1,
                  "cooldown": "PT30M"
                }
              }
            ]
          }
        ]
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[parameters('clusterName')]",
      "location": "[variables('resourceGroupLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "certificate": {
          "thumbprint": "[parameters('primaryCertificateThumbprint')]",
          "thumbprintSecondary": "[parameters('secondaryCertificateThumbprint')]",
          "x509StoreName": "My"
        },
        "clientCertificateCommonNames": [],
        "clientCertificateThumbprints": "[parameters('clientCertificateThumbprints')]",
        //"reverseProxyCertificate": {
        //  "thumbprint": "[parameters('primaryCertificateThumbprint')]",
        //  "x509StoreName": "My"
        //},
        "clusterState": "Default",
        "diagnosticsStorageAccountConfig": {
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.blob]",
          "protectedAccountKeyName": "StorageAccountKey1",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.queue]",
          "storageAccountName": "[variables('supportLogStorageAccountName')]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), variables('storageApiVersion')).primaryEndpoints.table]"
        },
        "fabricSettings": [
          {
            "parameters": [
              {
                "name": "ClusterProtectionLevel",
                "value": "EncryptAndSign"
              }
            ],
            "name": "Security"
          }
        ],
        //"managementEndpoint": "[concat('https://',reference(variables('nt0lbIPName')).dnsSettings.fqdn,':',parameters('nt0fabricHttpGatewayPort'))]",
        "managementEndpoint": "[concat('https://',parameters('loadBalancerIP'),':',parameters('nt0fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "[variables('nt0name')]",
            "applicationPorts": {
              "startPort": 20000,
              "endPort": 21000
            },
            "clientConnectionEndpointPort": "[parameters('nt0fabricTcpGatewayPort')]",
            "durabilityLevel": "Bronze",
            "ephemeralPorts": {
              "startPort": 49152,
              "endPort": 65534
            },
            "httpGatewayEndpointPort": "[parameters('nt0fabricHttpGatewayPort')]",
            //"reverseProxyEndpointPort": "[parameters('SFReverseProxyPort')]",
            "isPrimary": true,
            "vmInstanceCount": "[parameters('nt0InstanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "Silver",
        "upgradeMode": "Automatic",
        "vmImage": "Windows"
        //"azureActiveDirectory": {
        //  "tenantId": "",
        //  "clusterApplication": "",
        //  "clientApplication": ""
        //},
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    }
  ],
  "outputs": {
    "clusterProperties": {
      "value": "[reference(parameters('clusterName'))]",
      "type": "object"
    }
  }
}
